#parse("ModuleCommon.vm")

/************************ CHANGE REPORT HISTORY ******************************\
** Product VERSION,UPDATED BY,UPDATE DATE                                     *
*   DESCRIPTION OF CHANGE                                                     *
*-----------------------------------------------------------------------------*
* V,xiaoran27,2007-11-3
*   create
\*************************** END OF CHANGE REPORT HISTORY ********************/

package com.atlascopco.cic.dao.${module}.impl;

import java.util.List;

import com.atlascopco.cic.dao.${module}.I${Module}Dao;
import com.atlascopco.cic.entity.*;
import com.atlascopco.framework.dao.DataList;
import com.atlascopco.framework.dao.hibernate.HibernateDaoImpl;


/**
 * ${ModuleComment} Dao接口实现
 *
 * @author Xiaoran27 $author$
 * @version $Revision: 1.1 $
  */
public class ${Module}DaoImpl extends HibernateDaoImpl implements I${Module}Dao {

#set($i =0)#foreach($table0 in $Tables)#set($Table0 = $strings.capitalizeFirstLetter($table0))#set($table = $table0.toLowerCase())#set($Table = $strings.capitalizeFirstLetter($table))#set($TABLE = $table0.toUpperCase())#set($TableComment0 = $TableComments.get($i))

  //${Table0} manager
  /**
   * 说明：查询${Table0}信息列表
   *
   * @param theForm ${Table0}
   * @param pageSize int
   * @param pageNo int
   *
   * @return DataList
   */
  public DataList query${Table0}DataList(${Table0} theForm,int pageSize,int pageNo){
    return this.queryDataList(" from ${Table0} ", pageNo, pageSize);
  }

  /**
   * 说明：查询${Table0}列表
   *
   * @param theForm ${Table0}
   *
   * @return List
   */
  public List query${Table0}List(${Table0} theForm){
    return this.queryForList(" from ${Table0} ");
  }

  /**
   * 说明：新增${Table0}信息
   *
   * @param theForm ${Table0}
   */
  public void add${Table0}(${Table0} theForm){
    this.save(theForm);
  }

  /**
   * 说明：根据ID查询${Table0}信息
   *
   * @param id Long
   *
   * @return ${Table0}
   */
  public ${Table0} query${Table0}ById(Long id){
    return (${Table0}) this.load(${Table0}.class, id);
  }

  /**
   * 说明：更新资格信息
   *
   * @param theForm ${Table0}
   */
  public void update${Table0}(${Table0} theForm){
    this.update(theForm);
  }

  /**
   * 说明：根据ID删除${Table0}
   *
   * @param id Long
   */
  public void del${Table0}(Long id){
    this.delete(${Table0}.class, id);
  }

  /*================${Table0}提供的特殊接口=====start===============*\

  \*================${Table0}提供的特殊接口===== end ===============*/

#set($i=$i+1)#end
  /*================${module}提供的特殊接口=====start===============*\

  \*================${module}提供的特殊接口===== end ===============*/
}
